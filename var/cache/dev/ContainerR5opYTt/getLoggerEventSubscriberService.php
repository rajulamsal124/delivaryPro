<?php

namespace ContainerR5opYTt;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLoggerEventSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\EventSubscribers\LoggerEventSubscriber' shared autowired service.
     *
     * @return \App\EventSubscribers\LoggerEventSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/EventSubscribers/LoggerEventSubscriber.php';

        $a = ($container->privates['mailer.mailer'] ?? $container->load('getMailer_MailerService'));

        if (isset($container->privates['App\\EventSubscribers\\LoggerEventSubscriber'])) {
            return $container->privates['App\\EventSubscribers\\LoggerEventSubscriber'];
        }
        $b = ($container->privates['security.helper'] ?? $container->load('getSecurity_HelperService'));

        if (isset($container->privates['App\\EventSubscribers\\LoggerEventSubscriber'])) {
            return $container->privates['App\\EventSubscribers\\LoggerEventSubscriber'];
        }

        return $container->privates['App\\EventSubscribers\\LoggerEventSubscriber'] = new \App\EventSubscribers\LoggerEventSubscriber(($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), $a, ($container->privates['App\\Services\\DynamoDbService'] ?? $container->load('getDynamoDbServiceService')), $b);
    }
}
